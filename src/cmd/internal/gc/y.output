
state 0
	$accept: .file $end 
	$$4: .    (4)

	.  reduce 4 (src line 148)

	file  goto 1
	loadsys  goto 2
	$$4  goto 3

state 1
	$accept:  file.$end 

	$end  accept
	.  error


state 2
	file:  loadsys.package imports xdcl_list 
	package: .    (2)

	LPACKAGE  shift 5
	.  reduce 2 (src line 131)

	package  goto 4

state 3
	loadsys:  $$4.import_package import_there 

	LPACKAGE  shift 7
	.  error

	import_package  goto 6

state 4
	file:  loadsys package.imports xdcl_list 
	imports: .    (6)

	.  reduce 6 (src line 165)

	imports  goto 8

state 5
	package:  LPACKAGE.sym ';' 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 9
	hidden_importsym  goto 11

state 6
	loadsys:  $$4 import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 272)

	import_there  goto 14
	$$21  goto 15

state 7
	import_package:  LPACKAGE.LNAME import_safety ';' 

	LNAME  shift 16
	.  error


state 8
	file:  loadsys package imports.xdcl_list 
	imports:  imports.import ';' 
	xdcl_list: .    (218)

	LIMPORT  shift 19
	.  reduce 218 (src line 1507)

	xdcl_list  goto 17
	import  goto 18

state 9
	package:  LPACKAGE sym.';' 

	';'  shift 20
	.  error


state 10
	sym:  LNAME.    (157)

	.  reduce 157 (src line 1113)


state 11
	sym:  hidden_importsym.    (158)

	.  reduce 158 (src line 1122)


state 12
	sym:  '?'.    (159)

	.  reduce 159 (src line 1123)


state 13
	hidden_importsym:  '@'.LLITERAL '.' LNAME 
	hidden_importsym:  '@'.LLITERAL '.' '?' 

	LLITERAL  shift 21
	.  error


state 14
	loadsys:  $$4 import_package import_there.    (5)

	.  reduce 5 (src line 159)


state 15
	import_there:  $$21.hidden_import_list '$' '$' 
	hidden_import_list: .    (344)

	.  reduce 344 (src line 2209)

	hidden_import_list  goto 22

state 16
	import_package:  LPACKAGE LNAME.import_safety ';' 
	import_safety: .    (19)

	LNAME  shift 24
	.  reduce 19 (src line 264)

	import_safety  goto 23

state 17
	file:  loadsys package imports xdcl_list.    (1)
	xdcl_list:  xdcl_list.xdcl ';' 
	xdcl: .    (23)

	$end  reduce 1 (src line 122)
	error  shift 29
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 33
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 23 (src line 285)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 28
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	xfndcl  goto 27
	xdcl  goto 25
	expr_list  goto 49
	common_dcl  goto 26
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 18
	imports:  imports import.';' 

	';'  shift 84
	.  error


state 19
	import:  LIMPORT.import_stmt 
	import:  LIMPORT.'(' import_stmt_list osemi ')' 
	import:  LIMPORT.'(' ')' 

	LLITERAL  shift 88
	LNAME  shift 10
	'('  shift 86
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 85

state 20
	package:  LPACKAGE sym ';'.    (3)

	.  reduce 3 (src line 138)


state 21
	hidden_importsym:  '@' LLITERAL.'.' LNAME 
	hidden_importsym:  '@' LLITERAL.'.' '?' 

	'.'  shift 91
	.  error


state 22
	import_there:  $$21 hidden_import_list.'$' '$' 
	hidden_import_list:  hidden_import_list.hidden_import 

	LCONST  shift 96
	LFUNC  shift 98
	LIMPORT  shift 94
	LTYPE  shift 97
	LVAR  shift 95
	'$'  shift 92
	.  error

	hidden_import  goto 93

state 23
	import_package:  LPACKAGE LNAME import_safety.';' 

	';'  shift 99
	.  error


state 24
	import_safety:  LNAME.    (20)

	.  reduce 20 (src line 265)


state 25
	xdcl_list:  xdcl_list xdcl.';' 

	';'  shift 100
	.  error


state 26
	xdcl:  common_dcl.    (24)

	.  reduce 24 (src line 290)


state 27
	xdcl:  xfndcl.    (25)

	.  reduce 25 (src line 291)


state 28
	xdcl:  non_dcl_stmt.    (26)

	.  reduce 26 (src line 295)


state 29
	xdcl:  error.    (27)

	.  reduce 27 (src line 300)


state 30
	common_dcl:  LVAR.vardcl 
	common_dcl:  LVAR.'(' vardcl_list osemi ')' 
	common_dcl:  LVAR.'(' ')' 

	LNAME  shift 10
	'('  shift 102
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 101
	hidden_importsym  goto 11

state 31
	common_dcl:  lconst.constdcl 
	common_dcl:  lconst.'(' constdcl osemi ')' 
	common_dcl:  lconst.'(' constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst.'(' ')' 

	LNAME  shift 10
	'('  shift 107
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 108
	constdcl  goto 106
	hidden_importsym  goto 11

state 32
	common_dcl:  LTYPE.typedcl 
	common_dcl:  LTYPE.'(' typedcl_list osemi ')' 
	common_dcl:  LTYPE.'(' ')' 

	LNAME  shift 10
	'('  shift 110
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 109
	hidden_importsym  goto 11

state 33
	xfndcl:  LFUNC.fndcl fnbody 
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	'('  shift 114
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 115
	fndcl  goto 113
	hidden_importsym  goto 11

state 34
	non_dcl_stmt:  simple_stmt.    (256)

	.  reduce 256 (src line 1734)


state 35
	non_dcl_stmt:  for_stmt.    (257)

	.  reduce 257 (src line 1736)


state 36
	non_dcl_stmt:  switch_stmt.    (258)

	.  reduce 258 (src line 1737)


state 37
	non_dcl_stmt:  select_stmt.    (259)

	.  reduce 259 (src line 1738)


state 38
	non_dcl_stmt:  if_stmt.    (260)

	.  reduce 260 (src line 1739)


state 39
	non_dcl_stmt:  labelname.':' $$261 stmt 

	':'  shift 116
	.  error


state 40
	non_dcl_stmt:  LFALL.    (263)

	.  reduce 263 (src line 1756)


state 41
	non_dcl_stmt:  LBREAK.onew_name 
	onew_name: .    (155)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 155 (src line 1107)

	sym  goto 119
	new_name  goto 118
	onew_name  goto 117
	hidden_importsym  goto 11

state 42
	non_dcl_stmt:  LCONTINUE.onew_name 
	onew_name: .    (155)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 155 (src line 1107)

	sym  goto 119
	new_name  goto 118
	onew_name  goto 120
	hidden_importsym  goto 11

state 43
	non_dcl_stmt:  LGO.pseudocall 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	'('  shift 67
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 122
	pexpr_no_paren  goto 66
	pseudocall  goto 121
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 44
	non_dcl_stmt:  LDEFER.pseudocall 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	'('  shift 67
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 122
	pexpr_no_paren  goto 66
	pseudocall  goto 125
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 45
	non_dcl_stmt:  LGOTO.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 119
	new_name  goto 126
	hidden_importsym  goto 11

state 46
	non_dcl_stmt:  LRETURN.oexpr_list 
	oexpr_list: .    (292)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 292 (src line 1905)

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 128
	oexpr_list  goto 127
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 47
	lconst:  LCONST.    (38)

	.  reduce 38 (src line 354)


state 48
	simple_stmt:  expr.    (49)
	simple_stmt:  expr.LASOP expr 
	simple_stmt:  expr.LINC 
	simple_stmt:  expr.LDEC 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (276)

	LASOP  shift 130
	LCOLAS  reduce 276 (src line 1840)
	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LDEC  shift 132
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LINC  shift 131
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	'='  reduce 276 (src line 1840)
	','  reduce 276 (src line 1840)
	.  reduce 49 (src line 410)


state 49
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 154
	'='  shift 153
	','  shift 155
	.  error


state 50
	for_stmt:  LFOR.$$74 for_body 
	$$74: .    (74)

	.  reduce 74 (src line 659)

	$$74  goto 156

state 51
	switch_stmt:  LSWITCH.$$88 if_header $$89 LBODY caseblock_list '}' 
	$$88: .    (88)

	.  reduce 88 (src line 754)

	$$88  goto 157

state 52
	select_stmt:  LSELECT.$$91 LBODY caseblock_list '}' 
	$$91: .    (91)

	.  reduce 91 (src line 777)

	$$91  goto 158

state 53
	if_stmt:  LIF.$$78 if_header $$79 loop_body $$80 elseif_list else 
	$$78: .    (78)

	.  reduce 78 (src line 688)

	$$78  goto 159

state 54
	labelname:  new_name.    (163)

	.  reduce 163 (src line 1167)


state 55
	expr:  uexpr.    (93)

	.  reduce 93 (src line 793)


state 56
	new_name:  sym.    (153)
	name:  sym.    (162)

	':'  reduce 153 (src line 1091)
	.  reduce 162 (src line 1158)


state 57
	uexpr:  pexpr.    (114)
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 160
	'.'  shift 161
	'['  shift 162
	.  reduce 114 (src line 877)


state 58
	uexpr:  '*'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 163
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 59
	uexpr:  '&'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 164
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 60
	uexpr:  '+'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 165
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 61
	uexpr:  '-'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 166
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 62
	uexpr:  '!'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 167
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 63
	uexpr:  '~'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 168
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 64
	uexpr:  '^'.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 169
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 65
	uexpr:  LCOMM.uexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 170
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 66
	pexpr_no_paren:  pexpr_no_paren.'{' start_complit braced_keyval_list '}' 
	pexpr:  pexpr_no_paren.    (146)

	'{'  shift 171
	.  reduce 146 (src line 1054)


state 67
	pexpr_no_paren:  '('.expr_or_type ')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '('.expr_or_type ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 172
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 68
	pexpr_no_paren:  LLITERAL.    (126)

	.  reduce 126 (src line 941)


state 69
	pexpr_no_paren:  name.    (127)

	.  reduce 127 (src line 946)


state 70
	pexpr_no_paren:  pseudocall.    (134)

	.  reduce 134 (src line 984)


state 71
	pexpr_no_paren:  convtype.'(' expr ocomma ')' 

	'('  shift 180
	.  error


state 72
	pexpr_no_paren:  comptype.lbrace start_complit braced_keyval_list '}' 

	LBODY  shift 182
	'{'  shift 183
	.  error

	lbrace  goto 181

state 73
	pexpr_no_paren:  fnliteral.    (139)

	.  reduce 139 (src line 1011)


state 74
	convtype:  fntype.    (181)
	fnlitdcl:  fntype.    (215)

	'('  reduce 181 (src line 1220)
	.  reduce 215 (src line 1484)


state 75
	convtype:  othertype.    (182)
	comptype:  othertype.    (183)

	'('  reduce 182 (src line 1222)
	.  reduce 183 (src line 1224)


state 76
	fnliteral:  fnlitdcl.lbrace stmt_list '}' 
	fnliteral:  fnlitdcl.error 

	error  shift 185
	LBODY  shift 182
	'{'  shift 183
	.  error

	lbrace  goto 184

state 77
	othertype:  '['.oexpr ']' ntype 
	othertype:  '['.LDDD ']' ntype 
	oexpr: .    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LDDD  shift 187
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1899)

	sym  goto 123
	expr  goto 188
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 186
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 78
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 190
	'*'  shift 196
	'('  shift 195
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	dotname  goto 194
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 193
	non_recvchantype  goto 189
	othertype  goto 192
	fntype  goto 191
	hidden_importsym  goto 11

state 79
	othertype:  LMAP.'[' ntype ']' ntype 

	'['  shift 198
	.  error


state 80
	othertype:  structtype.    (196)

	.  reduce 196 (src line 1272)


state 81
	othertype:  interfacetype.    (197)

	.  reduce 197 (src line 1273)


state 82
	structtype:  LSTRUCT.lbrace structdcl_list osemi '}' 
	structtype:  LSTRUCT.lbrace '}' 

	LBODY  shift 182
	'{'  shift 183
	.  error

	lbrace  goto 199

state 83
	interfacetype:  LINTERFACE.lbrace interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE.lbrace '}' 

	LBODY  shift 182
	'{'  shift 183
	.  error

	lbrace  goto 200

state 84
	imports:  imports import ';'.    (7)

	.  reduce 7 (src line 166)


state 85
	import:  LIMPORT import_stmt.    (8)

	.  reduce 8 (src line 168)


state 86
	import:  LIMPORT '('.import_stmt_list osemi ')' 
	import:  LIMPORT '('.')' 

	LLITERAL  shift 88
	LNAME  shift 10
	')'  shift 202
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 203
	import_stmt_list  goto 201

state 87
	import_stmt:  import_here.import_package import_there 
	import_stmt:  import_here.import_there 
	$$21: .    (21)

	LPACKAGE  shift 7
	.  reduce 21 (src line 272)

	import_package  goto 204
	import_there  goto 205
	$$21  goto 15

state 88
	import_here:  LLITERAL.    (15)

	.  reduce 15 (src line 224)


state 89
	import_here:  sym.LLITERAL 

	LLITERAL  shift 206
	.  error


state 90
	import_here:  '.'.LLITERAL 

	LLITERAL  shift 207
	.  error


state 91
	hidden_importsym:  '@' LLITERAL '.'.LNAME 
	hidden_importsym:  '@' LLITERAL '.'.'?' 

	LNAME  shift 208
	'?'  shift 209
	.  error


state 92
	import_there:  $$21 hidden_import_list '$'.'$' 

	'$'  shift 210
	.  error


state 93
	hidden_import_list:  hidden_import_list hidden_import.    (345)

	.  reduce 345 (src line 2210)


state 94
	hidden_import:  LIMPORT.LNAME LLITERAL ';' 

	LNAME  shift 211
	.  error


state 95
	hidden_import:  LVAR.hidden_pkg_importsym hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 213
	hidden_pkg_importsym  goto 212

state 96
	hidden_import:  LCONST.hidden_pkg_importsym '=' hidden_constant ';' 
	hidden_import:  LCONST.hidden_pkg_importsym hidden_type '=' hidden_constant ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 213
	hidden_pkg_importsym  goto 214

state 97
	hidden_import:  LTYPE.hidden_pkgtype hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 213
	hidden_pkg_importsym  goto 216
	hidden_pkgtype  goto 215

state 98
	hidden_import:  LFUNC.hidden_fndcl fnbody ';' 

	'('  shift 219
	'@'  shift 13
	.  error

	hidden_fndcl  goto 217
	hidden_importsym  goto 213
	hidden_pkg_importsym  goto 218

state 99
	import_package:  LPACKAGE LNAME import_safety ';'.    (18)

	.  reduce 18 (src line 247)


state 100
	xdcl_list:  xdcl_list xdcl ';'.    (219)

	.  reduce 219 (src line 1511)


state 101
	common_dcl:  LVAR vardcl.    (28)

	.  reduce 28 (src line 305)


state 102
	common_dcl:  LVAR '('.vardcl_list osemi ')' 
	common_dcl:  LVAR '('.')' 

	LNAME  shift 10
	')'  shift 221
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 222
	vardcl_list  goto 220
	hidden_importsym  goto 11

state 103
	vardcl:  dcl_name_list.ntype 
	vardcl:  dcl_name_list.ntype '=' expr_list 
	vardcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'='  shift 224
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 225
	.  error

	sym  goto 123
	ntype  goto 223
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 104
	dcl_name_list:  dcl_name.    (274)

	.  reduce 274 (src line 1830)


state 105
	dcl_name:  sym.    (154)

	.  reduce 154 (src line 1101)


state 106
	common_dcl:  lconst constdcl.    (31)

	.  reduce 31 (src line 318)


state 107
	common_dcl:  lconst '('.constdcl osemi ')' 
	common_dcl:  lconst '('.constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst '('.')' 

	LNAME  shift 10
	')'  shift 234
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 108
	constdcl  goto 233
	hidden_importsym  goto 11

state 108
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'='  shift 236
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 225
	.  error

	sym  goto 123
	ntype  goto 235
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 109
	common_dcl:  LTYPE typedcl.    (35)

	.  reduce 35 (src line 341)


state 110
	common_dcl:  LTYPE '('.typedcl_list osemi ')' 
	common_dcl:  LTYPE '('.')' 

	LNAME  shift 10
	')'  shift 238
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 239
	typedcl_list  goto 237
	hidden_importsym  goto 11

state 111
	typedcl:  typedclname.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 240
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 112
	typedclname:  sym.    (47)

	.  reduce 47 (src line 395)


state 113
	xfndcl:  LFUNC fndcl.fnbody 
	fnbody: .    (210)

	'{'  shift 242
	.  reduce 210 (src line 1457)

	fnbody  goto 241

state 114
	fndcl:  '('.oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 243
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 115
	fndcl:  sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 251
	.  error


state 116
	non_dcl_stmt:  labelname ':'.$$261 stmt 
	$$261: .    (261)

	.  reduce 261 (src line 1740)

	$$261  goto 252

state 117
	non_dcl_stmt:  LBREAK onew_name.    (264)

	.  reduce 264 (src line 1762)


state 118
	onew_name:  new_name.    (156)

	.  reduce 156 (src line 1111)


state 119
	new_name:  sym.    (153)

	.  reduce 153 (src line 1091)


state 120
	non_dcl_stmt:  LCONTINUE onew_name.    (265)

	.  reduce 265 (src line 1766)


state 121
	pexpr_no_paren:  pseudocall.    (134)
	non_dcl_stmt:  LGO pseudocall.    (266)

	'('  reduce 134 (src line 984)
	'.'  reduce 134 (src line 984)
	'{'  reduce 134 (src line 984)
	'['  reduce 134 (src line 984)
	.  reduce 266 (src line 1770)


state 122
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 160
	'.'  shift 161
	'['  shift 162
	.  error


state 123
	name:  sym.    (162)

	.  reduce 162 (src line 1158)


state 124
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 253
	.  error


state 125
	pexpr_no_paren:  pseudocall.    (134)
	non_dcl_stmt:  LDEFER pseudocall.    (267)

	'('  reduce 134 (src line 984)
	'.'  reduce 134 (src line 984)
	'{'  reduce 134 (src line 984)
	'['  reduce 134 (src line 984)
	.  reduce 267 (src line 1774)


state 126
	non_dcl_stmt:  LGOTO new_name.    (268)

	.  reduce 268 (src line 1778)


state 127
	non_dcl_stmt:  LRETURN oexpr_list.    (269)

	.  reduce 269 (src line 1783)


state 128
	expr_list:  expr_list.',' expr 
	oexpr_list:  expr_list.    (293)

	','  shift 155
	.  reduce 293 (src line 1909)


state 129
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (276)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 276 (src line 1840)


state 130
	simple_stmt:  expr LASOP.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 254
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 131
	simple_stmt:  expr LINC.    (53)

	.  reduce 53 (src line 460)


state 132
	simple_stmt:  expr LDEC.    (54)

	.  reduce 54 (src line 466)


state 133
	expr:  expr LOROR.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 255
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 134
	expr:  expr LANDAND.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 256
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 135
	expr:  expr LEQ.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 257
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 136
	expr:  expr LNE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 258
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 137
	expr:  expr LLT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 259
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 138
	expr:  expr LLE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 260
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 139
	expr:  expr LGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 261
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 140
	expr:  expr LGT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 262
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 141
	expr:  expr '+'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 263
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 142
	expr:  expr '-'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 264
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 143
	expr:  expr '|'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 265
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 144
	expr:  expr '^'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 266
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 145
	expr:  expr '*'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 267
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 146
	expr:  expr '/'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 268
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 147
	expr:  expr '%'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 269
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 148
	expr:  expr '&'.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 270
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 149
	expr:  expr LANDNOT.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 271
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 150
	expr:  expr LLSH.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 272
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 151
	expr:  expr LRSH.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 273
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 152
	expr:  expr LCOMM.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 274
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 153
	simple_stmt:  expr_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 275
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 154
	simple_stmt:  expr_list LCOLAS.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 276
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 155
	expr_list:  expr_list ','.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 277
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 156
	for_stmt:  LFOR $$74.for_body 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 284
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	for_body  goto 278
	for_header  goto 279
	name  goto 69
	osimple_stmt  goto 280
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	range_stmt  goto 281
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 283
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 157
	switch_stmt:  LSWITCH $$88.if_header $$89 LBODY caseblock_list '}' 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 285
	name  goto 69
	osimple_stmt  goto 286
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 158
	select_stmt:  LSELECT $$91.LBODY caseblock_list '}' 

	LBODY  shift 287
	.  error


state 159
	if_stmt:  LIF $$78.if_header $$79 loop_body $$80 elseif_list else 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 288
	name  goto 69
	osimple_stmt  goto 286
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 160
	pseudocall:  pexpr '('.')' 
	pseudocall:  pexpr '('.expr_or_type_list ocomma ')' 
	pseudocall:  pexpr '('.expr_or_type_list LDDD ocomma ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	')'  shift 289
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 291
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_or_type_list  goto 290
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 161
	pexpr_no_paren:  pexpr '.'.sym 
	pexpr_no_paren:  pexpr '.'.'(' expr_or_type ')' 
	pexpr_no_paren:  pexpr '.'.'(' LTYPE ')' 

	LNAME  shift 10
	'('  shift 293
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 292
	hidden_importsym  goto 11

state 162
	pexpr_no_paren:  pexpr '['.expr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ':' oexpr ']' 
	oexpr: .    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1899)

	sym  goto 123
	expr  goto 294
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 295
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 163
	uexpr:  '*' uexpr.    (115)

	.  reduce 115 (src line 879)


state 164
	uexpr:  '&' uexpr.    (116)

	.  reduce 116 (src line 883)


state 165
	uexpr:  '+' uexpr.    (117)

	.  reduce 117 (src line 894)


state 166
	uexpr:  '-' uexpr.    (118)

	.  reduce 118 (src line 898)


state 167
	uexpr:  '!' uexpr.    (119)

	.  reduce 119 (src line 902)


state 168
	uexpr:  '~' uexpr.    (120)

	.  reduce 120 (src line 906)


state 169
	uexpr:  '^' uexpr.    (121)

	.  reduce 121 (src line 911)


state 170
	uexpr:  LCOMM uexpr.    (122)

	.  reduce 122 (src line 915)


state 171
	pexpr_no_paren:  pexpr_no_paren '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 296

state 172
	pexpr_no_paren:  '(' expr_or_type.')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type.')' 

	')'  shift 297
	.  error


state 173
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_or_type:  expr.    (148)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 148 (src line 1069)


state 174
	expr_or_type:  non_expr_type.    (149)

	.  reduce 149 (src line 1071)


state 175
	non_expr_type:  recvchantype.    (172)

	.  reduce 172 (src line 1201)


state 176
	non_expr_type:  fntype.    (173)
	convtype:  fntype.    (181)
	fnlitdcl:  fntype.    (215)

	error  reduce 215 (src line 1484)
	LBODY  reduce 215 (src line 1484)
	'('  reduce 181 (src line 1220)
	'{'  reduce 215 (src line 1484)
	.  reduce 173 (src line 1203)


state 177
	non_expr_type:  othertype.    (174)
	convtype:  othertype.    (182)
	comptype:  othertype.    (183)

	LBODY  reduce 183 (src line 1224)
	'('  reduce 182 (src line 1222)
	'{'  reduce 183 (src line 1224)
	.  reduce 174 (src line 1204)


state 178
	uexpr:  '*'.uexpr 
	non_expr_type:  '*'.non_expr_type 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 298
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 163
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 179
	uexpr:  LCOMM.uexpr 
	recvchantype:  LCOMM.LCHAN ntype 

	LLITERAL  shift 68
	LCHAN  shift 299
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 170
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 180
	pexpr_no_paren:  convtype '('.expr ocomma ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 300
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 181
	pexpr_no_paren:  comptype lbrace.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 301

state 182
	lbrace:  LBODY.    (151)

	.  reduce 151 (src line 1076)


state 183
	lbrace:  '{'.    (152)

	.  reduce 152 (src line 1081)


state 184
	fnliteral:  fnlitdcl lbrace.stmt_list '}' 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 303
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 302
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 185
	fnliteral:  fnlitdcl error.    (217)

	.  reduce 217 (src line 1496)


state 186
	othertype:  '[' oexpr.']' ntype 

	']'  shift 309
	.  error


state 187
	othertype:  '[' LDDD.']' ntype 

	']'  shift 310
	.  error


state 188
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	oexpr:  expr.    (291)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 291 (src line 1903)


state 189
	othertype:  LCHAN non_recvchantype.    (193)

	.  reduce 193 (src line 1258)


state 190
	othertype:  LCHAN LCOMM.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 311
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 191
	non_recvchantype:  fntype.    (176)

	.  reduce 176 (src line 1210)


state 192
	non_recvchantype:  othertype.    (177)

	.  reduce 177 (src line 1212)


state 193
	non_recvchantype:  ptrtype.    (178)

	.  reduce 178 (src line 1213)


state 194
	non_recvchantype:  dotname.    (179)

	.  reduce 179 (src line 1214)


state 195
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 312
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 196
	ptrtype:  '*'.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 313
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 197
	dotname:  name.    (189)
	dotname:  name.'.' sym 

	'.'  shift 314
	.  reduce 189 (src line 1234)


state 198
	othertype:  LMAP '['.ntype ']' ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 315
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 199
	structtype:  LSTRUCT lbrace.structdcl_list osemi '}' 
	structtype:  LSTRUCT lbrace.'}' 

	LNAME  shift 325
	'*'  shift 322
	'('  shift 321
	'}'  shift 317
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 119
	packname  goto 324
	embed  goto 320
	new_name  goto 323
	new_name_list  goto 319
	structdcl  goto 318
	structdcl_list  goto 316
	hidden_importsym  goto 11

state 200
	interfacetype:  LINTERFACE lbrace.interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE lbrace.'}' 

	LNAME  shift 325
	'('  shift 331
	'}'  shift 327
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 119
	packname  goto 330
	interfacedcl  goto 328
	new_name  goto 329
	interfacedcl_list  goto 326
	hidden_importsym  goto 11

state 201
	import:  LIMPORT '(' import_stmt_list.osemi ')' 
	import_stmt_list:  import_stmt_list.';' import_stmt 
	osemi: .    (286)

	';'  shift 333
	.  reduce 286 (src line 1893)

	osemi  goto 332

state 202
	import:  LIMPORT '(' ')'.    (10)

	.  reduce 10 (src line 171)


state 203
	import_stmt_list:  import_stmt.    (13)

	.  reduce 13 (src line 220)


state 204
	import_stmt:  import_here import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 272)

	import_there  goto 334
	$$21  goto 15

state 205
	import_stmt:  import_here import_there.    (12)

	.  reduce 12 (src line 209)


state 206
	import_here:  sym LLITERAL.    (16)

	.  reduce 16 (src line 232)


state 207
	import_here:  '.' LLITERAL.    (17)

	.  reduce 17 (src line 239)


state 208
	hidden_importsym:  '@' LLITERAL '.' LNAME.    (160)

	.  reduce 160 (src line 1128)


state 209
	hidden_importsym:  '@' LLITERAL '.' '?'.    (161)

	.  reduce 161 (src line 1143)


state 210
	import_there:  $$21 hidden_import_list '$' '$'.    (22)

	.  reduce 22 (src line 276)


state 211
	hidden_import:  LIMPORT LNAME.LLITERAL ';' 

	LLITERAL  shift 335
	.  error


state 212
	hidden_import:  LVAR hidden_pkg_importsym.hidden_type ';' 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 336
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 213
	hidden_pkg_importsym:  hidden_importsym.    (310)

	.  reduce 310 (src line 1985)


state 214
	hidden_import:  LCONST hidden_pkg_importsym.'=' hidden_constant ';' 
	hidden_import:  LCONST hidden_pkg_importsym.hidden_type '=' hidden_constant ';' 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'='  shift 350
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 351
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 215
	hidden_import:  LTYPE hidden_pkgtype.hidden_type ';' 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 352
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 216
	hidden_pkgtype:  hidden_pkg_importsym.    (311)

	.  reduce 311 (src line 1992)


state 217
	hidden_import:  LFUNC hidden_fndcl.fnbody ';' 
	fnbody: .    (210)

	'{'  shift 242
	.  reduce 210 (src line 1457)

	fnbody  goto 353

state 218
	hidden_fndcl:  hidden_pkg_importsym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 354
	.  error


state 219
	hidden_fndcl:  '('.hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 355

state 220
	common_dcl:  LVAR '(' vardcl_list.osemi ')' 
	vardcl_list:  vardcl_list.';' vardcl 
	osemi: .    (286)

	';'  shift 359
	.  reduce 286 (src line 1893)

	osemi  goto 358

state 221
	common_dcl:  LVAR '(' ')'.    (30)

	.  reduce 30 (src line 314)


state 222
	vardcl_list:  vardcl.    (220)

	.  reduce 220 (src line 1523)


state 223
	vardcl:  dcl_name_list ntype.    (39)
	vardcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 360
	.  reduce 39 (src line 360)


state 224
	vardcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 361
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 225
	dcl_name_list:  dcl_name_list ','.dcl_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 105
	dcl_name  goto 362
	hidden_importsym  goto 11

state 226
	ntype:  recvchantype.    (166)

	.  reduce 166 (src line 1190)


state 227
	ntype:  fntype.    (167)

	.  reduce 167 (src line 1192)


state 228
	ntype:  othertype.    (168)

	.  reduce 168 (src line 1193)


state 229
	ntype:  ptrtype.    (169)

	.  reduce 169 (src line 1194)


state 230
	ntype:  dotname.    (170)

	.  reduce 170 (src line 1195)


state 231
	ntype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 363
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 232
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 364
	.  error


state 233
	common_dcl:  lconst '(' constdcl.osemi ')' 
	common_dcl:  lconst '(' constdcl.';' constdcl_list osemi ')' 
	osemi: .    (286)

	';'  shift 366
	.  reduce 286 (src line 1893)

	osemi  goto 365

state 234
	common_dcl:  lconst '(' ')'.    (34)

	.  reduce 34 (src line 336)


state 235
	constdcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 367
	.  error


state 236
	constdcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 368
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 237
	common_dcl:  LTYPE '(' typedcl_list.osemi ')' 
	typedcl_list:  typedcl_list.';' typedcl 
	osemi: .    (286)

	';'  shift 370
	.  reduce 286 (src line 1893)

	osemi  goto 369

state 238
	common_dcl:  LTYPE '(' ')'.    (37)

	.  reduce 37 (src line 349)


state 239
	typedcl_list:  typedcl.    (224)

	.  reduce 224 (src line 1537)


state 240
	typedcl:  typedclname ntype.    (48)

	.  reduce 48 (src line 404)


state 241
	xfndcl:  LFUNC fndcl fnbody.    (204)

	.  reduce 204 (src line 1318)


state 242
	fnbody:  '{'.stmt_list '}' 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 303
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 371
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 243
	fndcl:  '(' oarg_type_list_ocomma.')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 372
	.  error


state 244
	arg_type_list:  arg_type_list.',' arg_type 
	oarg_type_list_ocomma:  arg_type_list.ocomma 
	ocomma: .    (288)

	','  shift 373
	.  reduce 288 (src line 1896)

	ocomma  goto 374

state 245
	arg_type_list:  arg_type.    (247)

	.  reduce 247 (src line 1697)


state 246
	arg_type:  name_or_type.    (243)

	.  reduce 243 (src line 1681)


state 247
	name:  sym.    (162)
	arg_type:  sym.name_or_type 
	arg_type:  sym.dotdotdot 

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 162 (src line 1158)

	sym  goto 123
	ntype  goto 249
	dotname  goto 230
	name  goto 197
	name_or_type  goto 375
	dotdotdot  goto 376
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 248
	arg_type:  dotdotdot.    (246)

	.  reduce 246 (src line 1695)


state 249
	name_or_type:  ntype.    (150)

	.  reduce 150 (src line 1073)


state 250
	dotdotdot:  LDDD.    (164)
	dotdotdot:  LDDD.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 164 (src line 1179)

	sym  goto 123
	ntype  goto 377
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 251
	fndcl:  sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 378
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 252
	non_dcl_stmt:  labelname ':' $$261.stmt 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 251 (src line 1719)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 251 (src line 1719)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 379
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 253
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 380
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 254
	simple_stmt:  expr LASOP expr.    (50)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 50 (src line 425)


state 255
	expr:  expr.LOROR expr 
	expr:  expr LOROR expr.    (94)
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 94 (src line 795)


state 256
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr LANDAND expr.    (95)
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 95 (src line 799)


state 257
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (96)
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 96 (src line 803)


state 258
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr LNE expr.    (97)
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 97 (src line 807)


state 259
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr LLT expr.    (98)
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 98 (src line 811)


state 260
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr LLE expr.    (99)
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 99 (src line 815)


state 261
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr LGE expr.    (100)
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 100 (src line 819)


state 262
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr LGT expr.    (101)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 101 (src line 823)


state 263
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (102)
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 102 (src line 827)


state 264
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (103)
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 103 (src line 831)


state 265
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (104)
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 104 (src line 835)


state 266
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (105)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 149
	LLSH  shift 150
	LRSH  shift 151
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 105 (src line 839)


state 267
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (106)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 106 (src line 843)


state 268
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (107)
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 107 (src line 847)


state 269
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (108)
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 108 (src line 851)


state 270
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (109)
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 109 (src line 855)


state 271
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr LANDNOT expr.    (110)
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 110 (src line 859)


state 272
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr LLSH expr.    (111)
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 111 (src line 863)


state 273
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr LRSH expr.    (112)
	expr:  expr.LCOMM expr 

	.  reduce 112 (src line 867)


state 274
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr:  expr LCOMM expr.    (113)

	LANDAND  shift 134
	LANDNOT  shift 149
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 113 (src line 872)


state 275
	simple_stmt:  expr_list '=' expr_list.    (51)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 51 (src line 430)


state 276
	simple_stmt:  expr_list LCOLAS expr_list.    (52)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 52 (src line 442)


state 277
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr_list ',' expr.    (277)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 277 (src line 1845)


state 278
	for_stmt:  LFOR $$74 for_body.    (75)

	.  reduce 75 (src line 664)


state 279
	for_body:  for_header.loop_body 

	LBODY  shift 382
	.  error

	loop_body  goto 381

state 280
	for_header:  osimple_stmt.';' osimple_stmt ';' osimple_stmt 
	for_header:  osimple_stmt.    (71)

	';'  shift 383
	.  reduce 71 (src line 644)


state 281
	for_header:  range_stmt.    (72)

	.  reduce 72 (src line 650)


state 282
	osimple_stmt:  simple_stmt.    (295)

	.  reduce 295 (src line 1915)


state 283
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	range_stmt:  expr_list.'=' LRANGE expr 
	range_stmt:  expr_list.LCOLAS LRANGE expr 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 385
	'='  shift 384
	','  shift 155
	.  error


state 284
	range_stmt:  LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 386
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 285
	switch_stmt:  LSWITCH $$88 if_header.$$89 LBODY caseblock_list '}' 
	$$89: .    (89)

	.  reduce 89 (src line 759)

	$$89  goto 387

state 286
	if_header:  osimple_stmt.    (76)
	if_header:  osimple_stmt.';' osimple_stmt 

	';'  shift 388
	.  reduce 76 (src line 670)


state 287
	select_stmt:  LSELECT $$91 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 590)

	caseblock_list  goto 389

state 288
	if_stmt:  LIF $$78 if_header.$$79 loop_body $$80 elseif_list else 
	$$79: .    (79)

	.  reduce 79 (src line 693)

	$$79  goto 390

state 289
	pseudocall:  pexpr '(' ')'.    (123)

	.  reduce 123 (src line 924)


state 290
	pseudocall:  pexpr '(' expr_or_type_list.ocomma ')' 
	pseudocall:  pexpr '(' expr_or_type_list.LDDD ocomma ')' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 
	ocomma: .    (288)

	LDDD  shift 392
	','  shift 393
	.  reduce 288 (src line 1896)

	ocomma  goto 391

state 291
	expr_or_type_list:  expr_or_type.    (278)

	.  reduce 278 (src line 1850)


state 292
	pexpr_no_paren:  pexpr '.' sym.    (128)

	.  reduce 128 (src line 947)


state 293
	pexpr_no_paren:  pexpr '.' '('.expr_or_type ')' 
	pexpr_no_paren:  pexpr '.' '('.LTYPE ')' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LTYPE  shift 395
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 394
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 294
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  pexpr '[' expr.']' 
	oexpr:  expr.    (291)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	']'  shift 396
	.  reduce 291 (src line 1903)


state 295
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ':' oexpr ']' 

	':'  shift 397
	.  error


state 296
	pexpr_no_paren:  pexpr_no_paren '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (284)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 284 (src line 1881)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 401
	fnliteral  goto 73
	keyval  goto 400
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 399
	braced_keyval_list  goto 398
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 297
	pexpr_no_paren:  '(' expr_or_type ')'.'{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type ')'.    (147)

	'{'  shift 404
	.  reduce 147 (src line 1056)


state 298
	non_expr_type:  '*' non_expr_type.    (175)

	.  reduce 175 (src line 1205)


state 299
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 405
	'*'  shift 196
	'('  shift 411
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 406
	dotname  goto 410
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 409
	recvchantype  goto 226
	non_recvchantype  goto 189
	othertype  goto 408
	fntype  goto 407
	hidden_importsym  goto 11

state 300
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  convtype '(' expr.ocomma ')' 
	ocomma: .    (288)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	','  shift 413
	.  reduce 288 (src line 1896)

	ocomma  goto 412

state 301
	pexpr_no_paren:  comptype lbrace start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (284)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 284 (src line 1881)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 401
	fnliteral  goto 73
	keyval  goto 400
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 399
	braced_keyval_list  goto 414
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 302
	fnliteral:  fnlitdcl lbrace stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 416
	'}'  shift 415
	.  error


state 303
	stmt_list:  stmt.    (270)

	.  reduce 270 (src line 1804)


state 304
	stmt:  compound_stmt.    (252)

	.  reduce 252 (src line 1723)


state 305
	stmt:  common_dcl.    (253)

	.  reduce 253 (src line 1724)


state 306
	stmt:  non_dcl_stmt.    (254)

	.  reduce 254 (src line 1728)


state 307
	stmt:  error.    (255)

	.  reduce 255 (src line 1729)


state 308
	compound_stmt:  '{'.$$59 stmt_list '}' 
	$$59: .    (59)

	.  reduce 59 (src line 544)

	$$59  goto 417

state 309
	othertype:  '[' oexpr ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 418
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 310
	othertype:  '[' LDDD ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 419
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 311
	othertype:  LCHAN LCOMM ntype.    (194)

	.  reduce 194 (src line 1263)


state 312
	non_recvchantype:  '(' ntype.')' 

	')'  shift 420
	.  error


state 313
	ptrtype:  '*' ntype.    (198)

	.  reduce 198 (src line 1275)


state 314
	dotname:  name '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 421
	hidden_importsym  goto 11

state 315
	othertype:  LMAP '[' ntype.']' ntype 

	']'  shift 422
	.  error


state 316
	structtype:  LSTRUCT lbrace structdcl_list.osemi '}' 
	structdcl_list:  structdcl_list.';' structdcl 
	osemi: .    (286)

	';'  shift 424
	.  reduce 286 (src line 1893)

	osemi  goto 423

state 317
	structtype:  LSTRUCT lbrace '}'.    (201)

	.  reduce 201 (src line 1295)


state 318
	structdcl_list:  structdcl.    (226)

	.  reduce 226 (src line 1547)


state 319
	structdcl:  new_name_list.ntype oliteral 
	new_name_list:  new_name_list.',' new_name 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 426
	.  error

	sym  goto 123
	ntype  goto 425
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 320
	structdcl:  embed.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 427

state 321
	structdcl:  '('.embed ')' oliteral 
	structdcl:  '('.'*' embed ')' oliteral 

	LNAME  shift 431
	'*'  shift 430
	.  error

	packname  goto 324
	embed  goto 429

state 322
	structdcl:  '*'.embed oliteral 
	structdcl:  '*'.'(' embed ')' oliteral 

	LNAME  shift 431
	'('  shift 433
	.  error

	packname  goto 324
	embed  goto 432

state 323
	new_name_list:  new_name.    (272)

	.  reduce 272 (src line 1820)


state 324
	embed:  packname.    (238)

	.  reduce 238 (src line 1646)


state 325
	sym:  LNAME.    (157)
	packname:  LNAME.    (236)
	packname:  LNAME.'.' sym 

	LLITERAL  reduce 236 (src line 1621)
	';'  reduce 236 (src line 1621)
	'.'  shift 434
	'}'  reduce 236 (src line 1621)
	.  reduce 157 (src line 1113)


state 326
	interfacetype:  LINTERFACE lbrace interfacedcl_list.osemi '}' 
	interfacedcl_list:  interfacedcl_list.';' interfacedcl 
	osemi: .    (286)

	';'  shift 436
	.  reduce 286 (src line 1893)

	osemi  goto 435

state 327
	interfacetype:  LINTERFACE lbrace '}'.    (203)

	.  reduce 203 (src line 1308)


state 328
	interfacedcl_list:  interfacedcl.    (228)

	.  reduce 228 (src line 1554)


state 329
	interfacedcl:  new_name.indcl 

	'('  shift 438
	.  error

	indcl  goto 437

state 330
	interfacedcl:  packname.    (240)

	.  reduce 240 (src line 1658)


state 331
	interfacedcl:  '('.packname ')' 

	LNAME  shift 431
	.  error

	packname  goto 439

state 332
	import:  LIMPORT '(' import_stmt_list osemi.')' 

	')'  shift 440
	.  error


state 333
	import_stmt_list:  import_stmt_list ';'.import_stmt 
	osemi:  ';'.    (287)

	LLITERAL  shift 88
	LNAME  shift 10
	'.'  shift 90
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	import_here  goto 87
	sym  goto 89
	hidden_importsym  goto 11
	import_stmt  goto 441

state 334
	import_stmt:  import_here import_package import_there.    (11)

	.  reduce 11 (src line 173)


state 335
	hidden_import:  LIMPORT LNAME LLITERAL.';' 

	';'  shift 442
	.  error


state 336
	hidden_import:  LVAR hidden_pkg_importsym hidden_type.';' 

	';'  shift 443
	.  error


state 337
	hidden_type:  hidden_type_misc.    (312)

	.  reduce 312 (src line 2003)


state 338
	hidden_type:  hidden_type_recv_chan.    (313)

	.  reduce 313 (src line 2005)


state 339
	hidden_type:  hidden_type_func.    (314)

	.  reduce 314 (src line 2006)


state 340
	hidden_type_misc:  hidden_importsym.    (317)

	.  reduce 317 (src line 2012)


state 341
	hidden_type_misc:  LNAME.    (318)

	.  reduce 318 (src line 2017)


state 342
	hidden_type_misc:  '['.']' hidden_type 
	hidden_type_misc:  '['.LLITERAL ']' hidden_type 

	LLITERAL  shift 445
	']'  shift 444
	.  error


state 343
	hidden_type_misc:  LMAP.'[' hidden_type ']' hidden_type 

	'['  shift 446
	.  error


state 344
	hidden_type_misc:  LSTRUCT.'{' ohidden_structdcl_list '}' 

	'{'  shift 447
	.  error


state 345
	hidden_type_misc:  LINTERFACE.'{' ohidden_interfacedcl_list '}' 

	'{'  shift 448
	.  error


state 346
	hidden_type_misc:  '*'.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 449
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 347
	hidden_type_misc:  LCHAN.hidden_type_non_recv_chan 
	hidden_type_misc:  LCHAN.'(' hidden_type_recv_chan ')' 
	hidden_type_misc:  LCHAN.LCOMM hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 452
	'*'  shift 346
	'('  shift 451
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type_misc  goto 453
	hidden_type_func  goto 454
	hidden_type_non_recv_chan  goto 450

state 348
	hidden_type_recv_chan:  LCOMM.LCHAN hidden_type 

	LCHAN  shift 455
	.  error


state 349
	hidden_type_func:  LFUNC.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 456
	.  error


state 350
	hidden_import:  LCONST hidden_pkg_importsym '='.hidden_constant ';' 

	LLITERAL  shift 460
	LNAME  shift 10
	'-'  shift 461
	'('  shift 459
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 462
	hidden_importsym  goto 11
	hidden_constant  goto 457
	hidden_literal  goto 458

state 351
	hidden_import:  LCONST hidden_pkg_importsym hidden_type.'=' hidden_constant ';' 

	'='  shift 463
	.  error


state 352
	hidden_import:  LTYPE hidden_pkgtype hidden_type.';' 

	';'  shift 464
	.  error


state 353
	hidden_import:  LFUNC hidden_fndcl fnbody.';' 

	';'  shift 465
	.  error


state 354
	hidden_fndcl:  hidden_pkg_importsym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (296)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1917)

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 467
	ohidden_funarg_list  goto 466

state 355
	hidden_fndcl:  '(' hidden_funarg_list.')' sym '(' ohidden_funarg_list ')' ohidden_funres 
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	')'  shift 468
	','  shift 469
	.  error


state 356
	hidden_funarg_list:  hidden_funarg.    (346)

	.  reduce 346 (src line 2212)


state 357
	hidden_funarg:  sym.hidden_type oliteral 
	hidden_funarg:  sym.LDDD hidden_type oliteral 

	LCHAN  shift 347
	LDDD  shift 471
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 470
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 358
	common_dcl:  LVAR '(' vardcl_list osemi.')' 

	')'  shift 472
	.  error


state 359
	vardcl_list:  vardcl_list ';'.vardcl 
	osemi:  ';'.    (287)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 103
	vardcl  goto 473
	hidden_importsym  goto 11

state 360
	vardcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 474
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 361
	vardcl:  dcl_name_list '=' expr_list.    (41)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 41 (src line 369)


state 362
	dcl_name_list:  dcl_name_list ',' dcl_name.    (275)

	.  reduce 275 (src line 1835)


state 363
	ntype:  '(' ntype.')' 

	')'  shift 475
	.  error


state 364
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 406
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 365
	common_dcl:  lconst '(' constdcl osemi.')' 

	')'  shift 476
	.  error


state 366
	common_dcl:  lconst '(' constdcl ';'.constdcl_list osemi ')' 
	osemi:  ';'.    (287)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 480
	constdcl  goto 479
	constdcl1  goto 478
	constdcl_list  goto 477
	hidden_importsym  goto 11

state 367
	constdcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 481
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 368
	constdcl:  dcl_name_list '=' expr_list.    (43)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 43 (src line 379)


state 369
	common_dcl:  LTYPE '(' typedcl_list osemi.')' 

	')'  shift 482
	.  error


state 370
	typedcl_list:  typedcl_list ';'.typedcl 
	osemi:  ';'.    (287)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 112
	typedclname  goto 111
	typedcl  goto 483
	hidden_importsym  goto 11

state 371
	fnbody:  '{' stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 416
	'}'  shift 484
	.  error


state 372
	fndcl:  '(' oarg_type_list_ocomma ')'.sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (212)

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 488
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 212 (src line 1469)

	sym  goto 485
	dotname  goto 493
	name  goto 197
	fnres  goto 486
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 492
	recvchantype  goto 489
	othertype  goto 491
	fnret_type  goto 487
	fntype  goto 490
	hidden_importsym  goto 11

state 373
	arg_type_list:  arg_type_list ','.arg_type 
	ocomma:  ','.    (289)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1897)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 494
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 374
	oarg_type_list_ocomma:  arg_type_list ocomma.    (250)

	.  reduce 250 (src line 1711)


state 375
	arg_type:  sym name_or_type.    (244)

	.  reduce 244 (src line 1683)


state 376
	arg_type:  sym dotdotdot.    (245)

	.  reduce 245 (src line 1689)


state 377
	dotdotdot:  LDDD ntype.    (165)

	.  reduce 165 (src line 1185)


state 378
	fndcl:  sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 495
	.  error


state 379
	non_dcl_stmt:  labelname ':' $$261 stmt.    (262)

	.  reduce 262 (src line 1745)


state 380
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 496
	.  error


state 381
	for_body:  for_header loop_body.    (73)

	.  reduce 73 (src line 652)


state 382
	loop_body:  LBODY.$$65 stmt_list '}' 
	$$65: .    (65)

	.  reduce 65 (src line 599)

	$$65  goto 497

state 383
	for_header:  osimple_stmt ';'.osimple_stmt ';' osimple_stmt 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 498
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 384
	simple_stmt:  expr_list '='.expr_list 
	range_stmt:  expr_list '='.LRANGE expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 499
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 275
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 385
	simple_stmt:  expr_list LCOLAS.expr_list 
	range_stmt:  expr_list LCOLAS.LRANGE expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRANGE  shift 500
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 129
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_list  goto 276
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 386
	range_stmt:  LRANGE expr.    (69)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 69 (src line 624)


state 387
	switch_stmt:  LSWITCH $$88 if_header $$89.LBODY caseblock_list '}' 

	LBODY  shift 501
	.  error


state 388
	if_header:  osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 502
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 389
	caseblock_list:  caseblock_list.caseblock 
	select_stmt:  LSELECT $$91 LBODY caseblock_list.'}' 

	LCASE  shift 506
	LDEFAULT  shift 507
	'}'  shift 504
	.  error

	case  goto 505
	caseblock  goto 503

state 390
	if_stmt:  LIF $$78 if_header $$79.loop_body $$80 elseif_list else 

	LBODY  shift 382
	.  error

	loop_body  goto 508

state 391
	pseudocall:  pexpr '(' expr_or_type_list ocomma.')' 

	')'  shift 509
	.  error


state 392
	pseudocall:  pexpr '(' expr_or_type_list LDDD.ocomma ')' 
	ocomma: .    (288)

	','  shift 413
	.  reduce 288 (src line 1896)

	ocomma  goto 510

state 393
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 
	ocomma:  ','.    (289)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1897)

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 511
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 394
	pexpr_no_paren:  pexpr '.' '(' expr_or_type.')' 

	')'  shift 512
	.  error


state 395
	pexpr_no_paren:  pexpr '.' '(' LTYPE.')' 

	')'  shift 513
	.  error


state 396
	pexpr_no_paren:  pexpr '[' expr ']'.    (131)

	.  reduce 131 (src line 966)


state 397
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ':' oexpr ']' 
	oexpr: .    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1899)

	sym  goto 123
	expr  goto 188
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 514
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 398
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list.'}' 

	'}'  shift 515
	.  error


state 399
	keyval_list:  keyval_list.',' keyval 
	keyval_list:  keyval_list.',' bare_complitexpr 
	braced_keyval_list:  keyval_list.ocomma 
	ocomma: .    (288)

	','  shift 516
	.  reduce 288 (src line 1896)

	ocomma  goto 517

state 400
	keyval_list:  keyval.    (280)

	.  reduce 280 (src line 1863)


state 401
	keyval_list:  bare_complitexpr.    (281)

	.  reduce 281 (src line 1868)


state 402
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	keyval:  expr.':' complitexpr 
	bare_complitexpr:  expr.    (142)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	':'  shift 518
	.  reduce 142 (src line 1026)


state 403
	bare_complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 519

state 404
	pexpr_no_paren:  '(' expr_or_type ')' '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 520

state 405
	othertype:  LCHAN LCOMM.ntype 
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 299
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 311
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 406
	recvchantype:  LCOMM LCHAN ntype.    (199)

	.  reduce 199 (src line 1281)


state 407
	ntype:  fntype.    (167)
	non_recvchantype:  fntype.    (176)

	LBODY  reduce 176 (src line 1210)
	'('  reduce 176 (src line 1210)
	'{'  reduce 176 (src line 1210)
	.  reduce 167 (src line 1192)


state 408
	ntype:  othertype.    (168)
	non_recvchantype:  othertype.    (177)

	LBODY  reduce 177 (src line 1212)
	'('  reduce 177 (src line 1212)
	'{'  reduce 177 (src line 1212)
	.  reduce 168 (src line 1193)


state 409
	ntype:  ptrtype.    (169)
	non_recvchantype:  ptrtype.    (178)

	LBODY  reduce 178 (src line 1213)
	'('  reduce 178 (src line 1213)
	'{'  reduce 178 (src line 1213)
	.  reduce 169 (src line 1194)


state 410
	ntype:  dotname.    (170)
	non_recvchantype:  dotname.    (179)

	LBODY  reduce 179 (src line 1214)
	'('  reduce 179 (src line 1214)
	'{'  reduce 179 (src line 1214)
	.  reduce 170 (src line 1195)


state 411
	ntype:  '('.ntype ')' 
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 521
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 412
	pexpr_no_paren:  convtype '(' expr ocomma.')' 

	')'  shift 522
	.  error


state 413
	ocomma:  ','.    (289)

	.  reduce 289 (src line 1897)


state 414
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list.'}' 

	'}'  shift 523
	.  error


state 415
	fnliteral:  fnlitdcl lbrace stmt_list '}'.    (216)

	.  reduce 216 (src line 1490)


state 416
	stmt_list:  stmt_list ';'.stmt 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 251 (src line 1719)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 251 (src line 1719)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 524
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 417
	compound_stmt:  '{' $$59.stmt_list '}' 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 303
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 525
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 418
	othertype:  '[' oexpr ']' ntype.    (191)

	.  reduce 191 (src line 1248)


state 419
	othertype:  '[' LDDD ']' ntype.    (192)

	.  reduce 192 (src line 1253)


state 420
	non_recvchantype:  '(' ntype ')'.    (180)

	.  reduce 180 (src line 1215)


state 421
	dotname:  name '.' sym.    (190)

	.  reduce 190 (src line 1236)


state 422
	othertype:  LMAP '[' ntype ']'.ntype 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	ntype  goto 526
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 423
	structtype:  LSTRUCT lbrace structdcl_list osemi.'}' 

	'}'  shift 527
	.  error


state 424
	structdcl_list:  structdcl_list ';'.structdcl 
	osemi:  ';'.    (287)

	LNAME  shift 325
	'*'  shift 322
	'('  shift 321
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 119
	packname  goto 324
	embed  goto 320
	new_name  goto 323
	new_name_list  goto 319
	structdcl  goto 528
	hidden_importsym  goto 11

state 425
	structdcl:  new_name_list ntype.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 529

state 426
	new_name_list:  new_name_list ','.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 119
	new_name  goto 530
	hidden_importsym  goto 11

state 427
	structdcl:  embed oliteral.    (231)

	.  reduce 231 (src line 1589)


state 428
	oliteral:  LLITERAL.    (303)

	.  reduce 303 (src line 1939)


state 429
	structdcl:  '(' embed.')' oliteral 

	')'  shift 531
	.  error


state 430
	structdcl:  '(' '*'.embed ')' oliteral 

	LNAME  shift 431
	.  error

	packname  goto 324
	embed  goto 532

state 431
	packname:  LNAME.    (236)
	packname:  LNAME.'.' sym 

	'.'  shift 434
	.  reduce 236 (src line 1621)


state 432
	structdcl:  '*' embed.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 533

state 433
	structdcl:  '*' '('.embed ')' oliteral 

	LNAME  shift 431
	.  error

	packname  goto 324
	embed  goto 534

state 434
	packname:  LNAME '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 535
	hidden_importsym  goto 11

state 435
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi.'}' 

	'}'  shift 536
	.  error


state 436
	interfacedcl_list:  interfacedcl_list ';'.interfacedcl 
	osemi:  ';'.    (287)

	LNAME  shift 325
	'('  shift 331
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 119
	packname  goto 330
	interfacedcl  goto 537
	new_name  goto 329
	hidden_importsym  goto 11

state 437
	interfacedcl:  new_name indcl.    (239)

	.  reduce 239 (src line 1652)


state 438
	indcl:  '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 538
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 439
	interfacedcl:  '(' packname.')' 

	')'  shift 539
	.  error


state 440
	import:  LIMPORT '(' import_stmt_list osemi ')'.    (9)

	.  reduce 9 (src line 170)


state 441
	import_stmt_list:  import_stmt_list ';' import_stmt.    (14)

	.  reduce 14 (src line 222)


state 442
	hidden_import:  LIMPORT LNAME LLITERAL ';'.    (304)

	.  reduce 304 (src line 1944)


state 443
	hidden_import:  LVAR hidden_pkg_importsym hidden_type ';'.    (305)

	.  reduce 305 (src line 1949)


state 444
	hidden_type_misc:  '[' ']'.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 540
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 445
	hidden_type_misc:  '[' LLITERAL.']' hidden_type 

	']'  shift 541
	.  error


state 446
	hidden_type_misc:  LMAP '['.hidden_type ']' hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 542
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 447
	hidden_type_misc:  LSTRUCT '{'.ohidden_structdcl_list '}' 
	ohidden_structdcl_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1923)

	sym  goto 546
	hidden_importsym  goto 11
	hidden_structdcl  goto 545
	hidden_structdcl_list  goto 544
	ohidden_structdcl_list  goto 543

state 448
	hidden_type_misc:  LINTERFACE '{'.ohidden_interfacedcl_list '}' 
	ohidden_interfacedcl_list: .    (300)

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 552
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 1929)

	sym  goto 550
	hidden_importsym  goto 553
	hidden_interfacedcl  goto 549
	hidden_interfacedcl_list  goto 548
	ohidden_interfacedcl_list  goto 547
	hidden_type  goto 551
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 449
	hidden_type_misc:  '*' hidden_type.    (324)

	.  reduce 324 (src line 2048)


state 450
	hidden_type_misc:  LCHAN hidden_type_non_recv_chan.    (325)

	.  reduce 325 (src line 2052)


state 451
	hidden_type_misc:  LCHAN '('.hidden_type_recv_chan ')' 

	LCOMM  shift 348
	.  error

	hidden_type_recv_chan  goto 554

state 452
	hidden_type_misc:  LCHAN LCOMM.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 555
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 453
	hidden_type_non_recv_chan:  hidden_type_misc.    (315)

	.  reduce 315 (src line 2008)


state 454
	hidden_type_non_recv_chan:  hidden_type_func.    (316)

	.  reduce 316 (src line 2010)


state 455
	hidden_type_recv_chan:  LCOMM LCHAN.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 556
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 456
	hidden_type_func:  LFUNC '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (296)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1917)

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 467
	ohidden_funarg_list  goto 557

state 457
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant.';' 

	';'  shift 558
	.  error


state 458
	hidden_constant:  hidden_literal.    (342)

	.  reduce 342 (src line 2195)


state 459
	hidden_constant:  '('.hidden_literal '+' hidden_literal ')' 

	LLITERAL  shift 460
	LNAME  shift 10
	'-'  shift 461
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 462
	hidden_importsym  goto 11
	hidden_literal  goto 559

state 460
	hidden_literal:  LLITERAL.    (339)

	.  reduce 339 (src line 2164)


state 461
	hidden_literal:  '-'.LLITERAL 

	LLITERAL  shift 560
	.  error


state 462
	hidden_literal:  sym.    (341)

	.  reduce 341 (src line 2187)


state 463
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '='.hidden_constant ';' 

	LLITERAL  shift 460
	LNAME  shift 10
	'-'  shift 461
	'('  shift 459
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 462
	hidden_importsym  goto 11
	hidden_constant  goto 561
	hidden_literal  goto 458

state 464
	hidden_import:  LTYPE hidden_pkgtype hidden_type ';'.    (308)

	.  reduce 308 (src line 1961)


state 465
	hidden_import:  LFUNC hidden_fndcl fnbody ';'.    (309)

	.  reduce 309 (src line 1965)


state 466
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 562
	.  error


state 467
	ohidden_funarg_list:  hidden_funarg_list.    (297)
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	','  shift 469
	.  reduce 297 (src line 1921)


state 468
	hidden_fndcl:  '(' hidden_funarg_list ')'.sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 563
	hidden_importsym  goto 11

state 469
	hidden_funarg_list:  hidden_funarg_list ','.hidden_funarg 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 564

state 470
	hidden_funarg:  sym hidden_type.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 565

state 471
	hidden_funarg:  sym LDDD.hidden_type oliteral 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 566
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 472
	common_dcl:  LVAR '(' vardcl_list osemi ')'.    (29)

	.  reduce 29 (src line 310)


state 473
	vardcl_list:  vardcl_list ';' vardcl.    (221)

	.  reduce 221 (src line 1525)


state 474
	vardcl:  dcl_name_list ntype '=' expr_list.    (40)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 40 (src line 365)


state 475
	ntype:  '(' ntype ')'.    (171)

	.  reduce 171 (src line 1196)


state 476
	common_dcl:  lconst '(' constdcl osemi ')'.    (32)

	.  reduce 32 (src line 324)


state 477
	common_dcl:  lconst '(' constdcl ';' constdcl_list.osemi ')' 
	constdcl_list:  constdcl_list.';' constdcl1 
	osemi: .    (286)

	';'  shift 568
	.  reduce 286 (src line 1893)

	osemi  goto 567

state 478
	constdcl_list:  constdcl1.    (222)

	.  reduce 222 (src line 1530)


state 479
	constdcl1:  constdcl.    (44)

	.  reduce 44 (src line 384)


state 480
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	constdcl1:  dcl_name_list.ntype 
	constdcl1:  dcl_name_list.    (46)
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'='  shift 236
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	','  shift 225
	.  reduce 46 (src line 390)

	sym  goto 123
	ntype  goto 569
	dotname  goto 230
	name  goto 197
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 481
	constdcl:  dcl_name_list ntype '=' expr_list.    (42)
	expr_list:  expr_list.',' expr 

	','  shift 155
	.  reduce 42 (src line 374)


state 482
	common_dcl:  LTYPE '(' typedcl_list osemi ')'.    (36)

	.  reduce 36 (src line 345)


state 483
	typedcl_list:  typedcl_list ';' typedcl.    (225)

	.  reduce 225 (src line 1542)


state 484
	fnbody:  '{' stmt_list '}'.    (211)

	.  reduce 211 (src line 1461)


state 485
	name:  sym.    (162)
	fndcl:  '(' oarg_type_list_ocomma ')' sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 570
	.  reduce 162 (src line 1158)


state 486
	fntype:  LFUNC '(' oarg_type_list_ocomma ')' fnres.    (209)

	.  reduce 209 (src line 1448)


state 487
	fnres:  fnret_type.    (213)

	.  reduce 213 (src line 1474)


state 488
	fnres:  '('.oarg_type_list_ocomma ')' 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 571
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 489
	fnret_type:  recvchantype.    (184)

	.  reduce 184 (src line 1227)


state 490
	fnret_type:  fntype.    (185)

	.  reduce 185 (src line 1229)


state 491
	fnret_type:  othertype.    (186)

	.  reduce 186 (src line 1230)


state 492
	fnret_type:  ptrtype.    (187)

	.  reduce 187 (src line 1231)


state 493
	fnret_type:  dotname.    (188)

	.  reduce 188 (src line 1232)


state 494
	arg_type_list:  arg_type_list ',' arg_type.    (248)

	.  reduce 248 (src line 1702)


state 495
	fndcl:  sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (212)

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 488
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 212 (src line 1469)

	sym  goto 123
	dotname  goto 493
	name  goto 197
	fnres  goto 572
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 492
	recvchantype  goto 489
	othertype  goto 491
	fnret_type  goto 487
	fntype  goto 490
	hidden_importsym  goto 11

state 496
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (212)

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 488
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 212 (src line 1469)

	sym  goto 123
	dotname  goto 493
	name  goto 197
	fnres  goto 486
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 492
	recvchantype  goto 489
	othertype  goto 491
	fnret_type  goto 487
	fntype  goto 490
	hidden_importsym  goto 11

state 497
	loop_body:  LBODY $$65.stmt_list '}' 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 303
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 573
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 498
	for_header:  osimple_stmt ';' osimple_stmt.';' osimple_stmt 

	';'  shift 574
	.  error


state 499
	range_stmt:  expr_list '=' LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 575
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 500
	range_stmt:  expr_list LCOLAS LRANGE.expr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 576
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 501
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 590)

	caseblock_list  goto 577

state 502
	if_header:  osimple_stmt ';' osimple_stmt.    (77)

	.  reduce 77 (src line 677)


state 503
	caseblock_list:  caseblock_list caseblock.    (64)

	.  reduce 64 (src line 594)


state 504
	select_stmt:  LSELECT $$91 LBODY caseblock_list '}'.    (92)

	.  reduce 92 (src line 782)


state 505
	caseblock:  case.$$61 stmt_list 
	$$61: .    (61)

	.  reduce 61 (src line 559)

	$$61  goto 578

state 506
	case:  LCASE.expr_or_type_list ':' 
	case:  LCASE.expr_or_type_list '=' expr ':' 
	case:  LCASE.expr_or_type_list LCOLAS expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 291
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	expr_or_type_list  goto 579
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 507
	case:  LDEFAULT.':' 

	':'  shift 580
	.  error


state 508
	if_stmt:  LIF $$78 if_header $$79 loop_body.$$80 elseif_list else 
	$$80: .    (80)

	.  reduce 80 (src line 699)

	$$80  goto 581

state 509
	pseudocall:  pexpr '(' expr_or_type_list ocomma ')'.    (124)

	.  reduce 124 (src line 929)


state 510
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma.')' 

	')'  shift 582
	.  error


state 511
	expr_or_type_list:  expr_or_type_list ',' expr_or_type.    (279)

	.  reduce 279 (src line 1855)


state 512
	pexpr_no_paren:  pexpr '.' '(' expr_or_type ')'.    (129)

	.  reduce 129 (src line 958)


state 513
	pexpr_no_paren:  pexpr '.' '(' LTYPE ')'.    (130)

	.  reduce 130 (src line 962)


state 514
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.']' 
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.':' oexpr ']' 

	':'  shift 584
	']'  shift 583
	.  error


state 515
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list '}'.    (137)

	.  reduce 137 (src line 998)


state 516
	keyval_list:  keyval_list ','.keyval 
	keyval_list:  keyval_list ','.bare_complitexpr 
	ocomma:  ','.    (289)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1897)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 586
	fnliteral  goto 73
	keyval  goto 585
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 517
	braced_keyval_list:  keyval_list ocomma.    (285)

	.  reduce 285 (src line 1885)


state 518
	keyval:  expr ':'.complitexpr 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 589
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 588
	complitexpr  goto 587
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 519
	bare_complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (284)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 284 (src line 1881)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 401
	fnliteral  goto 73
	keyval  goto 400
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 399
	braced_keyval_list  goto 590
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 520
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (284)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 284 (src line 1881)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 401
	fnliteral  goto 73
	keyval  goto 400
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 399
	braced_keyval_list  goto 591
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 521
	ntype:  '(' ntype.')' 
	non_recvchantype:  '(' ntype.')' 

	')'  shift 592
	.  error


state 522
	pexpr_no_paren:  convtype '(' expr ocomma ')'.    (135)

	.  reduce 135 (src line 985)


state 523
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list '}'.    (136)

	.  reduce 136 (src line 991)


state 524
	stmt_list:  stmt_list ';' stmt.    (271)

	.  reduce 271 (src line 1812)


state 525
	compound_stmt:  '{' $$59 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 416
	'}'  shift 593
	.  error


state 526
	othertype:  LMAP '[' ntype ']' ntype.    (195)

	.  reduce 195 (src line 1268)


state 527
	structtype:  LSTRUCT lbrace structdcl_list osemi '}'.    (200)

	.  reduce 200 (src line 1288)


state 528
	structdcl_list:  structdcl_list ';' structdcl.    (227)

	.  reduce 227 (src line 1549)


state 529
	structdcl:  new_name_list ntype oliteral.    (230)

	.  reduce 230 (src line 1564)


state 530
	new_name_list:  new_name_list ',' new_name.    (273)

	.  reduce 273 (src line 1825)


state 531
	structdcl:  '(' embed ')'.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 594

state 532
	structdcl:  '(' '*' embed.')' oliteral 

	')'  shift 595
	.  error


state 533
	structdcl:  '*' embed oliteral.    (233)

	.  reduce 233 (src line 1600)


state 534
	structdcl:  '*' '(' embed.')' oliteral 

	')'  shift 596
	.  error


state 535
	packname:  LNAME '.' sym.    (237)

	.  reduce 237 (src line 1632)


state 536
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi '}'.    (202)

	.  reduce 202 (src line 1301)


state 537
	interfacedcl_list:  interfacedcl_list ';' interfacedcl.    (229)

	.  reduce 229 (src line 1559)


state 538
	indcl:  '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 597
	.  error


state 539
	interfacedcl:  '(' packname ')'.    (241)

	.  reduce 241 (src line 1662)


state 540
	hidden_type_misc:  '[' ']' hidden_type.    (319)

	.  reduce 319 (src line 2028)


state 541
	hidden_type_misc:  '[' LLITERAL ']'.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 598
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 542
	hidden_type_misc:  LMAP '[' hidden_type.']' hidden_type 

	']'  shift 599
	.  error


state 543
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list.'}' 

	'}'  shift 600
	.  error


state 544
	ohidden_structdcl_list:  hidden_structdcl_list.    (299)
	hidden_structdcl_list:  hidden_structdcl_list.';' hidden_structdcl 

	';'  shift 601
	.  reduce 299 (src line 1927)


state 545
	hidden_structdcl_list:  hidden_structdcl.    (348)

	.  reduce 348 (src line 2222)


state 546
	hidden_structdcl:  sym.hidden_type oliteral 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 602
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 547
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list.'}' 

	'}'  shift 603
	.  error


state 548
	ohidden_interfacedcl_list:  hidden_interfacedcl_list.    (301)
	hidden_interfacedcl_list:  hidden_interfacedcl_list.';' hidden_interfacedcl 

	';'  shift 604
	.  reduce 301 (src line 1933)


state 549
	hidden_interfacedcl_list:  hidden_interfacedcl.    (350)

	.  reduce 350 (src line 2232)


state 550
	hidden_interfacedcl:  sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 605
	.  error


state 551
	hidden_interfacedcl:  hidden_type.    (334)

	.  reduce 334 (src line 2139)


state 552
	sym:  LNAME.    (157)
	hidden_type_misc:  LNAME.    (318)

	'('  reduce 157 (src line 1113)
	.  reduce 318 (src line 2017)


state 553
	sym:  hidden_importsym.    (158)
	hidden_type_misc:  hidden_importsym.    (317)

	'('  reduce 158 (src line 1122)
	.  reduce 317 (src line 2012)


state 554
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan.')' 

	')'  shift 606
	.  error


state 555
	hidden_type_misc:  LCHAN LCOMM hidden_type.    (327)

	.  reduce 327 (src line 2064)


state 556
	hidden_type_recv_chan:  LCOMM LCHAN hidden_type.    (328)

	.  reduce 328 (src line 2071)


state 557
	hidden_type_func:  LFUNC '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 607
	.  error


state 558
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant ';'.    (306)

	.  reduce 306 (src line 1953)


state 559
	hidden_constant:  '(' hidden_literal.'+' hidden_literal ')' 

	'+'  shift 608
	.  error


state 560
	hidden_literal:  '-' LLITERAL.    (340)

	.  reduce 340 (src line 2169)


state 561
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant.';' 

	';'  shift 609
	.  error


state 562
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (335)

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'('  shift 612
	'['  shift 342
	'@'  shift 13
	.  reduce 335 (src line 2144)

	hidden_importsym  goto 340
	hidden_funres  goto 611
	ohidden_funres  goto 610
	hidden_type  goto 613
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 563
	hidden_fndcl:  '(' hidden_funarg_list ')' sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 614
	.  error


state 564
	hidden_funarg_list:  hidden_funarg_list ',' hidden_funarg.    (347)

	.  reduce 347 (src line 2217)


state 565
	hidden_funarg:  sym hidden_type oliteral.    (330)

	.  reduce 330 (src line 2085)


state 566
	hidden_funarg:  sym LDDD hidden_type.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 615

state 567
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi.')' 

	')'  shift 616
	.  error


state 568
	constdcl_list:  constdcl_list ';'.constdcl1 
	osemi:  ';'.    (287)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 287 (src line 1894)

	sym  goto 105
	dcl_name  goto 104
	dcl_name_list  goto 480
	constdcl  goto 479
	constdcl1  goto 617
	hidden_importsym  goto 11

state 569
	constdcl:  dcl_name_list ntype.'=' expr_list 
	constdcl1:  dcl_name_list ntype.    (45)

	'='  shift 367
	.  reduce 45 (src line 386)


state 570
	fndcl:  '(' oarg_type_list_ocomma ')' sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (249)

	LCHAN  shift 78
	LDDD  shift 250
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 231
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 249 (src line 1707)

	sym  goto 247
	ntype  goto 249
	arg_type  goto 245
	dotname  goto 230
	name  goto 197
	name_or_type  goto 246
	oarg_type_list_ocomma  goto 618
	arg_type_list  goto 244
	dotdotdot  goto 248
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 229
	recvchantype  goto 226
	othertype  goto 228
	fntype  goto 227
	hidden_importsym  goto 11

state 571
	fnres:  '(' oarg_type_list_ocomma.')' 

	')'  shift 619
	.  error


state 572
	fndcl:  sym '(' oarg_type_list_ocomma ')' fnres.    (205)

	.  reduce 205 (src line 1336)


state 573
	loop_body:  LBODY $$65 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 416
	'}'  shift 620
	.  error


state 574
	for_header:  osimple_stmt ';' osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	name  goto 69
	osimple_stmt  goto 621
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 575
	range_stmt:  expr_list '=' LRANGE expr.    (67)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 67 (src line 610)


state 576
	range_stmt:  expr_list LCOLAS LRANGE expr.    (68)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 68 (src line 617)


state 577
	caseblock_list:  caseblock_list.caseblock 
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list.'}' 

	LCASE  shift 506
	LDEFAULT  shift 507
	'}'  shift 622
	.  error

	case  goto 505
	caseblock  goto 503

state 578
	caseblock:  case $$61.stmt_list 
	stmt: .    (251)

	error  shift 307
	LLITERAL  shift 68
	LBREAK  shift 41
	LCASE  reduce 251 (src line 1719)
	LCHAN  shift 78
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 251 (src line 1719)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 124
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 82
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	';'  reduce 251 (src line 1719)
	'{'  shift 308
	'}'  reduce 251 (src line 1719)
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 56
	stmt  goto 303
	compound_stmt  goto 304
	expr  goto 48
	fnliteral  goto 73
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 306
	labelname  goto 39
	name  goto 69
	new_name  goto 54
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 55
	expr_list  goto 49
	stmt_list  goto 623
	common_dcl  goto 305
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 76

state 579
	case:  LCASE expr_or_type_list.':' 
	case:  LCASE expr_or_type_list.'=' expr ':' 
	case:  LCASE expr_or_type_list.LCOLAS expr ':' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 

	LCOLAS  shift 626
	'='  shift 625
	':'  shift 624
	','  shift 627
	.  error


state 580
	case:  LDEFAULT ':'.    (58)

	.  reduce 58 (src line 524)


state 581
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80.elseif_list else 
	elseif_list: .    (84)

	.  reduce 84 (src line 734)

	elseif_list  goto 628

state 582
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma ')'.    (125)

	.  reduce 125 (src line 934)


state 583
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ']'.    (132)

	.  reduce 132 (src line 970)


state 584
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':'.oexpr ']' 
	oexpr: .    (290)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 290 (src line 1899)

	sym  goto 123
	expr  goto 188
	fnliteral  goto 73
	name  goto 69
	oexpr  goto 629
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 585
	keyval_list:  keyval_list ',' keyval.    (282)

	.  reduce 282 (src line 1872)


state 586
	keyval_list:  keyval_list ',' bare_complitexpr.    (283)

	.  reduce 283 (src line 1876)


state 587
	keyval:  expr ':' complitexpr.    (141)

	.  reduce 141 (src line 1020)


state 588
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	complitexpr:  expr.    (144)

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	.  reduce 144 (src line 1046)


state 589
	complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (140)

	.  reduce 140 (src line 1013)

	start_complit  goto 630

state 590
	bare_complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 631
	.  error


state 591
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list.'}' 

	'}'  shift 632
	.  error


state 592
	ntype:  '(' ntype ')'.    (171)
	non_recvchantype:  '(' ntype ')'.    (180)

	LBODY  reduce 180 (src line 1215)
	'('  reduce 180 (src line 1215)
	'{'  reduce 180 (src line 1215)
	.  reduce 171 (src line 1196)


state 593
	compound_stmt:  '{' $$59 stmt_list '}'.    (60)

	.  reduce 60 (src line 549)


state 594
	structdcl:  '(' embed ')' oliteral.    (232)

	.  reduce 232 (src line 1594)


state 595
	structdcl:  '(' '*' embed ')'.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 633

state 596
	structdcl:  '*' '(' embed ')'.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 634

state 597
	indcl:  '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (212)

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 488
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 212 (src line 1469)

	sym  goto 123
	dotname  goto 493
	name  goto 197
	fnres  goto 635
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 492
	recvchantype  goto 489
	othertype  goto 491
	fnret_type  goto 487
	fntype  goto 490
	hidden_importsym  goto 11

state 598
	hidden_type_misc:  '[' LLITERAL ']' hidden_type.    (320)

	.  reduce 320 (src line 2032)


state 599
	hidden_type_misc:  LMAP '[' hidden_type ']'.hidden_type 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'@'  shift 13
	.  error

	hidden_importsym  goto 340
	hidden_type  goto 636
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 600
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list '}'.    (322)

	.  reduce 322 (src line 2040)


state 601
	hidden_structdcl_list:  hidden_structdcl_list ';'.hidden_structdcl 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 546
	hidden_importsym  goto 11
	hidden_structdcl  goto 637

state 602
	hidden_structdcl:  sym hidden_type.oliteral 
	oliteral: .    (302)

	LLITERAL  shift 428
	.  reduce 302 (src line 1935)

	oliteral  goto 638

state 603
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list '}'.    (323)

	.  reduce 323 (src line 2044)


state 604
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';'.hidden_interfacedcl 

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 552
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'['  shift 342
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 550
	hidden_importsym  goto 553
	hidden_interfacedcl  goto 639
	hidden_type  goto 551
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 605
	hidden_interfacedcl:  sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (296)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1917)

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 467
	ohidden_funarg_list  goto 640

state 606
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan ')'.    (326)

	.  reduce 326 (src line 2058)


state 607
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (335)

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'('  shift 612
	'['  shift 342
	'@'  shift 13
	.  reduce 335 (src line 2144)

	hidden_importsym  goto 340
	hidden_funres  goto 611
	ohidden_funres  goto 641
	hidden_type  goto 613
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 608
	hidden_constant:  '(' hidden_literal '+'.hidden_literal ')' 

	LLITERAL  shift 460
	LNAME  shift 10
	'-'  shift 461
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 462
	hidden_importsym  goto 11
	hidden_literal  goto 642

state 609
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'.    (307)

	.  reduce 307 (src line 1957)


state 610
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres.    (207)

	.  reduce 207 (src line 1405)


state 611
	ohidden_funres:  hidden_funres.    (336)

	.  reduce 336 (src line 2148)


state 612
	hidden_funres:  '('.ohidden_funarg_list ')' 
	ohidden_funarg_list: .    (296)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1917)

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 467
	ohidden_funarg_list  goto 643

state 613
	hidden_funres:  hidden_type.    (338)

	.  reduce 338 (src line 2155)


state 614
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (296)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1917)

	sym  goto 357
	hidden_importsym  goto 11
	hidden_funarg  goto 356
	hidden_funarg_list  goto 467
	ohidden_funarg_list  goto 644

state 615
	hidden_funarg:  sym LDDD hidden_type oliteral.    (331)

	.  reduce 331 (src line 2094)


state 616
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi ')'.    (33)

	.  reduce 33 (src line 330)


state 617
	constdcl_list:  constdcl_list ';' constdcl1.    (223)

	.  reduce 223 (src line 1532)


state 618
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 645
	.  error


state 619
	fnres:  '(' oarg_type_list_ocomma ')'.    (214)

	.  reduce 214 (src line 1478)


state 620
	loop_body:  LBODY $$65 stmt_list '}'.    (66)

	.  reduce 66 (src line 604)


state 621
	for_header:  osimple_stmt ';' osimple_stmt ';' osimple_stmt.    (70)

	.  reduce 70 (src line 630)


state 622
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list '}'.    (90)

	.  reduce 90 (src line 768)


state 623
	caseblock:  case $$61 stmt_list.    (62)
	stmt_list:  stmt_list.';' stmt 

	';'  shift 416
	.  reduce 62 (src line 571)


state 624
	case:  LCASE expr_or_type_list ':'.    (55)

	.  reduce 55 (src line 473)


state 625
	case:  LCASE expr_or_type_list '='.expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 646
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 626
	case:  LCASE expr_or_type_list LCOLAS.expr ':' 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 647
	fnliteral  goto 73
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 627
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 179
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 178
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 123
	expr  goto 173
	expr_or_type  goto 511
	fnliteral  goto 73
	name  goto 69
	non_expr_type  goto 174
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	recvchantype  goto 175
	othertype  goto 177
	fntype  goto 176
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 628
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list.else 
	elseif_list:  elseif_list.elseif 
	else: .    (86)

	LELSE  shift 650
	.  reduce 86 (src line 743)

	elseif  goto 649
	else  goto 648

state 629
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr.']' 

	']'  shift 651
	.  error


state 630
	complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (284)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'{'  shift 403
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 284 (src line 1881)

	sym  goto 123
	expr  goto 402
	bare_complitexpr  goto 401
	fnliteral  goto 73
	keyval  goto 400
	name  goto 69
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	uexpr  goto 55
	keyval_list  goto 399
	braced_keyval_list  goto 652
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 631
	bare_complitexpr:  '{' start_complit braced_keyval_list '}'.    (143)

	.  reduce 143 (src line 1040)


state 632
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'.    (138)

	.  reduce 138 (src line 1004)


state 633
	structdcl:  '(' '*' embed ')' oliteral.    (234)

	.  reduce 234 (src line 1606)


state 634
	structdcl:  '*' '(' embed ')' oliteral.    (235)

	.  reduce 235 (src line 1613)


state 635
	indcl:  '(' oarg_type_list_ocomma ')' fnres.    (242)

	.  reduce 242 (src line 1668)


state 636
	hidden_type_misc:  LMAP '[' hidden_type ']' hidden_type.    (321)

	.  reduce 321 (src line 2036)


state 637
	hidden_structdcl_list:  hidden_structdcl_list ';' hidden_structdcl.    (349)

	.  reduce 349 (src line 2227)


state 638
	hidden_structdcl:  sym hidden_type oliteral.    (332)

	.  reduce 332 (src line 2110)


state 639
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';' hidden_interfacedcl.    (351)

	.  reduce 351 (src line 2237)


state 640
	hidden_interfacedcl:  sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 653
	.  error


state 641
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')' ohidden_funres.    (329)

	.  reduce 329 (src line 2079)


state 642
	hidden_constant:  '(' hidden_literal '+' hidden_literal.')' 

	')'  shift 654
	.  error


state 643
	hidden_funres:  '(' ohidden_funarg_list.')' 

	')'  shift 655
	.  error


state 644
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 656
	.  error


state 645
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (212)

	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 232
	'*'  shift 196
	'('  shift 488
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 212 (src line 1469)

	sym  goto 123
	dotname  goto 493
	name  goto 197
	fnres  goto 657
	interfacetype  goto 81
	structtype  goto 80
	ptrtype  goto 492
	recvchantype  goto 489
	othertype  goto 491
	fnret_type  goto 487
	fntype  goto 490
	hidden_importsym  goto 11

state 646
	case:  LCASE expr_or_type_list '=' expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	':'  shift 658
	.  error


state 647
	case:  LCASE expr_or_type_list LCOLAS expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 134
	LANDNOT  shift 149
	LCOMM  shift 152
	LEQ  shift 135
	LGE  shift 139
	LGT  shift 140
	LLE  shift 138
	LLSH  shift 150
	LLT  shift 137
	LNE  shift 136
	LOROR  shift 133
	LRSH  shift 151
	'+'  shift 141
	'-'  shift 142
	'|'  shift 143
	'^'  shift 144
	'*'  shift 145
	'/'  shift 146
	'%'  shift 147
	'&'  shift 148
	':'  shift 659
	.  error


state 648
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list else.    (81)

	.  reduce 81 (src line 703)


state 649
	elseif_list:  elseif_list elseif.    (85)

	.  reduce 85 (src line 738)


state 650
	elseif:  LELSE.LIF $$82 if_header loop_body 
	else:  LELSE.compound_stmt 

	LIF  shift 660
	'{'  shift 308
	.  error

	compound_stmt  goto 661

state 651
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr ']'.    (133)

	.  reduce 133 (src line 974)


state 652
	complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 662
	.  error


state 653
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (335)

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'('  shift 612
	'['  shift 342
	'@'  shift 13
	.  reduce 335 (src line 2144)

	hidden_importsym  goto 340
	hidden_funres  goto 611
	ohidden_funres  goto 663
	hidden_type  goto 613
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 654
	hidden_constant:  '(' hidden_literal '+' hidden_literal ')'.    (343)

	.  reduce 343 (src line 2197)


state 655
	hidden_funres:  '(' ohidden_funarg_list ')'.    (337)

	.  reduce 337 (src line 2150)


state 656
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (335)

	LCHAN  shift 347
	LFUNC  shift 349
	LINTERFACE  shift 345
	LMAP  shift 343
	LNAME  shift 341
	LSTRUCT  shift 344
	LCOMM  shift 348
	'*'  shift 346
	'('  shift 612
	'['  shift 342
	'@'  shift 13
	.  reduce 335 (src line 2144)

	hidden_importsym  goto 340
	hidden_funres  goto 611
	ohidden_funres  goto 664
	hidden_type  goto 613
	hidden_type_misc  goto 337
	hidden_type_func  goto 339
	hidden_type_recv_chan  goto 338

state 657
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres.    (206)

	.  reduce 206 (src line 1368)


state 658
	case:  LCASE expr_or_type_list '=' expr ':'.    (56)

	.  reduce 56 (src line 497)


state 659
	case:  LCASE expr_or_type_list LCOLAS expr ':'.    (57)

	.  reduce 57 (src line 515)


state 660
	elseif:  LELSE LIF.$$82 if_header loop_body 
	$$82: .    (82)

	.  reduce 82 (src line 720)

	$$82  goto 665

state 661
	else:  LELSE compound_stmt.    (87)

	.  reduce 87 (src line 747)


state 662
	complitexpr:  '{' start_complit braced_keyval_list '}'.    (145)

	.  reduce 145 (src line 1048)


state 663
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')' ohidden_funres.    (333)

	.  reduce 333 (src line 2134)


state 664
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres.    (208)

	.  reduce 208 (src line 1431)


state 665
	elseif:  LELSE LIF $$82.if_header loop_body 
	osimple_stmt: .    (294)

	LLITERAL  shift 68
	LCHAN  shift 78
	LFUNC  shift 124
	LINTERFACE  shift 83
	LMAP  shift 79
	LNAME  shift 10
	LSTRUCT  shift 82
	LCOMM  shift 65
	'+'  shift 60
	'-'  shift 61
	'^'  shift 64
	'*'  shift 58
	'&'  shift 59
	'('  shift 67
	'!'  shift 62
	'~'  shift 63
	'['  shift 77
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1911)

	sym  goto 123
	expr  goto 48
	fnliteral  goto 73
	if_header  goto 666
	name  goto 69
	osimple_stmt  goto 286
	pexpr  goto 57
	pexpr_no_paren  goto 66
	pseudocall  goto 70
	simple_stmt  goto 282
	uexpr  goto 55
	expr_list  goto 49
	convtype  goto 71
	comptype  goto 72
	interfacetype  goto 81
	structtype  goto 80
	othertype  goto 75
	fntype  goto 74
	hidden_importsym  goto 11
	fnlitdcl  goto 76

state 666
	elseif:  LELSE LIF $$82 if_header.loop_body 

	LBODY  shift 382
	.  error

	loop_body  goto 667

state 667
	elseif:  LELSE LIF $$82 if_header loop_body.    (83)

	.  reduce 83 (src line 725)


76 terminals, 142 nonterminals
352 grammar rules, 668/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
191 working sets used
memory: parser 3749/30000
446 extra closures
3093 shift entries, 64 exceptions
603 goto entries
1650 entries saved by goto default
Optimizer space used: output 2282/30000
2282 table entries, 722 zero
maximum spread: 76, maximum offset: 666
